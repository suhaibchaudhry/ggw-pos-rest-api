<?php
function pos_api_expose_menu() {
	//Post Format: {request : {uname, pass}}
	//Secure later by changing access arguments to something more role based
  $routers['admin/settings/pos-payment'] = array(
    'title' => 'Point of Sale Payment',
    'description' => 'Configure authorize.net account information.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('pos_api_expose_admin_payment_settings'),
    'access arguments' => array('administer conditional actions'),
    'type' => MENU_NORMAL_ITEM
  );

	$routers['pos-api/auth'] = array(
		'title' => 'Authenticate POS Users',
		'page callback' => 'pos_api_expose_auth',
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,
		'file' => 'includes/auth.route.inc'
  );

  $routers['pos-api/clock'] = array(
  	'title' => 'Clock RPC',
  	'description' => 'Clock in or clock out callback for POS Users.',
		'page callback' => 'pos_api_expose_clock',
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,
		'file' => 'includes/clock.route.inc'
  );

  $routers['pos-api/clockState'] = array(
  	'title' => 'Clock State RPC',
  	'description' => 'Query clock state for initial button states on app.',
		'page callback' => 'pos_api_expose_clockState',
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,
		'file' => 'includes/clock.route.inc'
  );

  $routers['pos-api/product-scan'] = array(
  	'title' => 'Scan Product Barcode',
  	'description' => 'Search for products by a barcode.',
		'page callback' => 'pos_api_expose_product_scan',
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,
		'file' => 'includes/products.route.inc'
  );

  $routers['pos-api/ticket-statuses'] = array(
  	'title' => 'Ticket Statuses.',
  	'description' => 'Get a list of ticket status.',
		'page callback' => 'pos_api_expose_ticket_statuses',
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,
		'file' => 'includes/tickets.route.inc'
  );

  $routers['pos-api/new-ticket'] = array(
  	'title' => 'New Ticket',
  	'description' => 'Create a new ticket and get ticketId.',
		'page callback' => 'pos_api_expose_new_ticket',
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,
		'file' => 'includes/tickets.route.inc'
  );

  $routers['pos-api/load-ticket'] = array(
  	'title' => 'Load Ticket Products',
  	'description' => 'Load products from an existing ticketId.',
		'page callback' => 'pos_api_expose_load_ticket_products',
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,
		'file' => 'includes/products.route.inc'
  );

  $routers['pos-api/ticket/update-customer'] = array(
  	'title' => 'Update Ticket Customer',
  	'description' => 'Update customer on a ticket.',
		'page callback' => 'pos_api_expose_ticket_update_customer',
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,
		'file' => 'includes/tickets.route.inc'
  );

  $routers['pos-api/ticket/update-qty'] = array(
  	'title' => 'Update Ticket Qty',
  	'description' => 'Update customer on a qty.',
		'page callback' => 'pos_api_expose_ticket_update_product_qty',
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,
		'file' => 'includes/tickets.route.inc'
  );

  $routers['pos-api/ticket/get-current'] = array(
  	'title' => 'Update Ticket Customer',
  	'description' => 'Get current ticket to patch dirty caches on typeaheadjs.',
		'page callback' => 'pos_api_expose_ticket_current',
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,
		'file' => 'includes/tickets.route.inc'
  );

  $routers['pos-api/ticket/add-product'] = array(
  	'title' => 'Add Product to Ticket',
  	'description' => 'Add a product to ticket.',
		'page callback' => 'pos_api_expose_ticket_add_product',
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,
		'file' => 'includes/tickets.route.inc'
  );

  $routers['pos-api/ticket/remove-product'] = array(
  	'title' => 'Remove Product from Ticket',
  	'description' => 'Remove a product from ticket.',
		'page callback' => 'pos_api_expose_ticket_remove_product',
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,
		'file' => 'includes/tickets.route.inc'
  );

  $routers['pos-api/ticket/update-total'] = array(
  	'title' => 'Update Ticket Totals',
  	'description' => 'Update a ticket totals.',
		'page callback' => 'pos_api_expose_ticket_update_totals',
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,
		'file' => 'includes/tickets.route.inc'
  );

  $routers['pos-api/ticket/reprocess-rma'] = array(
    'title' => 'Update RMA Refunds',
    'description' => 'Update a refund amount on an rma ticket.',
    'page callback' => 'pos_api_expose_update_rma_refund',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/tickets.route.inc'
  );

  $routers['pos-api/ticket/process-rma'] = array(
    'title' => 'Process an RMA ticket.',
    'description' => 'Update a refund amount on an rma ticket.',
    'page callback' => 'pos_api_expose_process_rma',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/tickets.route.inc'
  );

	$routers['pos-api/ticket/update-status'] = array(
		'title' => 'Update Ticket Status',
		'description' => 'Update a ticket status.',
	  'page callback' => 'pos_api_expose_ticket_update_status',
	  'access arguments' => array('access content'),
	  'type' => MENU_CALLBACK,
	  'file' => 'includes/tickets.route.inc'
	);

	$routers['pos-api/ticket/delivery'] = array(
		'title' => 'Ticket Delivey',
		'description' => 'Update ticket delivery.',
		'page callback' => 'pos_api_expose_ticket_update_zone',
		'access arguments' => array('access content'),
	  'type' => MENU_CALLBACK,
	  'file' => 'includes/tickets.route.inc'
	);

	$routers['pos-api/ticket/cash-checkout'] = array(
		'title' => 'Cash Checkout',
		'description' => 'Checkout with cash.',
		'page callback' => 'pos_api_expose_ticket_cash_checkout',
		'access arguments' => array('access content'),
	  'type' => MENU_CALLBACK,
	  'file' => 'includes/tickets.route.inc'
	);

	$routers['pos-api/ticket/credit-checkout'] = array(
		'title' => 'Customer Credits Checkout',
		'description' => 'Checkout customer using credit.',
		'page callback' => 'pos_api_expose_credit_checkout',
		'access arguments' => array('access content'),
	  'type' => MENU_CALLBACK,
	  'file' => 'includes/tickets.route.inc'
	);

  $routers['pos-api/ticket/swipe-checkout'] = array(
    'title' => 'Credit Card Swipe Checkout',
    'description' => 'Checkout RPC for magnetic card swipe.',
    'page callback' => 'pos_api_expose_ticket_swipe_checkout',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/tickets.route.inc'
  );

  $routers['pos-api/ticket/partial-swipe-checkout'] = array(
    'title' => 'Partial Credit Card Swipe Checkout',
    'description' => 'Checkout RPC for magnetic card swipe with cash.',
    'page callback' => 'pos_api_expose_ticket_partial_checkout',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/tickets.route.inc'
  );

  $routers['pos-api/ticket/credit-cash-checkout'] = array(
    'title' => 'Credit Cash Checkout',
    'description' => 'Checkout credit payments with cash.',
    'page callback' => 'pos_api_expose_credit_cash_checkout',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/tickets.route.inc'
  );

  $routers['pos-api/ticket/rma-checkout'] = array(
    'title' => 'Customer RMA Checkout',
    'description' => 'Checkout customer RMA ticket.',
    'page callback' => 'pos_api_expose_rma_refund',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/tickets.route.inc'
  );

  $routers['pos-api/ticket/create-rma-ticket'] = array(
    'title' => 'Create RMA Ticket',
    'description' => 'Checkout customer RMA ticket.',
    'page callback' => 'pos_api_expose_rma_create_ticket',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/tickets.route.inc'
  );

  $routers['pos-api/ticket/rma-products'] = array(
    'title' => 'Customer RMA Products',
    'description' => 'Products of customer RMA ticket.',
    'page callback' => 'pos_api_expose_rma_products',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/products.route.inc'
  );

  $routers['pos-api/ticket/load-total'] = array(
    'title' => 'Ticket Total',
    'description' => 'Get the complete total on a ticket from server before checkout.',
    'page callback' => 'pos_api_expose_ticket_totals',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/tickets.route.inc'
  );

  $routers['pos-api/ticket/unlock-ticket'] = array(
    'title' => 'Unlock Ticket',
    'description' => 'Unlock ticket callback.',
    'page callback' => 'pos_api_expose_unlock_ticket_event',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/tickets.route.inc'
  );

	$routers['pos-api/tickets/%'] = array(
		'title' => 'Search Tickets',
		'description' => 'Search for tickets by ticket id or customer info.',
	  'page callback' => 'pos_api_expose_ticket_search',
	  'access arguments' => array('access content'),
	  'page arguments' => array(2, 3),
	  'type' => MENU_CALLBACK,
	  'file' => 'includes/tickets.route.inc'
	);

	$routers['pos-api/products/%'] = array(
		'title' => 'Search Products',
		'description' => 'Search for products by name or sku.',
	  'page callback' => 'pos_api_expose_product_search',
	  'access arguments' => array('access content'),
	  'page arguments' => array(2, 3),
	  'type' => MENU_CALLBACK,
	  'file' => 'includes/products.route.inc'
	);

	$routers['pos-api/customers/%'] = array(
		'title' => 'Search Customers',
		'description' => 'Search for customer by company name, number, address or other field keywords.',
	  'page callback' => 'pos_api_expose_customer_search',
	  'access arguments' => array('access content'),
	  'page arguments' => array(2, 3),
	  'type' => MENU_CALLBACK,
	  'file' => 'includes/customers.route.inc'
	);

	$routers['pos-api/customer'] = array(
		'title' => 'Search Customers',
		'description' => 'Search for customer by customer uid, number, address or other field keywords.',
	  'page callback' => 'pos_api_expose_get_customer',
	  'access arguments' => array('access content'),
	  'type' => MENU_CALLBACK,
	  'file' => 'includes/customers.route.inc'
	);

	$routers['pos-api/customer/info'] = array(
		'title' => 'Customer Info',
		'description' => 'Get customer info.',
	  'page callback' => 'pos_api_expose_customer_info',
	  'access arguments' => array('access content'),
	  'type' => MENU_CALLBACK,
	  'file' => 'includes/customers.route.inc'
	);

  $routers['pos-api/customer/info-payments'] = array(
    'title' => 'Customer Info',
    'description' => 'Get customer info payments.',
    'page callback' => 'pos_api_expose_customer_info_payments',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/customers.route.inc'
  );

  $routers['pos-api/customer/settlement-list'] = array(
    'title' => 'Customer Settlement Info',
    'description' => 'Get customer info payments.',
    'page callback' => 'pos_api_expose_customer_info_settlements',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/customers.route.inc'
  );

	$routers['pos-api/customer/credits'] = array(
		'title' => 'Customer Credits',
		'description' => 'Get customers credit summary object.',
		'page callback' => 'pos_api_expose_credit_summary',
		'access arguments' => array('access content'),
	  'type' => MENU_CALLBACK,
	  'file' => 'includes/customers.route.inc'
	);

	$routers['pos-api/customer/invoice'] = array(
		'title' => 'Customer Invoices',
		'description' => 'Get AHAH customer invoice list.',
  	'page callback' => 'pos_api_expose_customer_invoices',
	  'access arguments' => array('access content'),
	  'type' => MENU_CALLBACK,
	  'file' => 'includes/customers.route.inc'
	);

  $routers['pos-api/customer/block'] = array(
    'title' => 'Block customer RPC.',
    'description' => 'Disable a provided customer.',
    'page callback' => 'pos_api_expose_customer_block',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/customers.route.inc'
  );

	$routers['pos-api/employee/recent-tickets'] = array(
		'title' => 'Get Recent Tickets',
		'description' => 'Get AHAH recent ticket list.',
	  'page callback' => 'pos_api_expose_recent_invoices',
	  'access arguments' => array('access content'),
	  'type' => MENU_CALLBACK,
	  'file' => 'includes/tickets.route.inc'
	);

	$routers['pos-api/ticket/quote'] = array(
		'title' => 'Get List of Quote Tickets',
		'description' => 'Get AHAH quote ticket list.',
	  'page callback' => 'pos_api_expose_quote_invoices',
	  'access arguments' => array('access content'),
	  'type' => MENU_CALLBACK,
	  'file' => 'includes/tickets.route.inc'
	);

	$routers['pos-api/ticket/open'] = array(
		'title' => 'Get List of Open Tickets',
		'description' => 'Get AHAH quote ticket list.',
	  'page callback' => 'pos_api_expose_open_invoices',
	  'access arguments' => array('access content'),
	  'type' => MENU_CALLBACK,
	  'file' => 'includes/tickets.route.inc'
	);

  $routers['pos-api/ticket/open/%'] = array(
    'title' => 'Get List of Open Tickets',
    'description' => 'Get AHAH quote ticket list.',
    'page callback' => 'pos_api_expose_open_invoices',
    'page arguments' => array(3),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/tickets.route.inc'
  );

	$routers['pos-api/ticket/closed'] = array(
		'title' => 'Get List of closed Tickets',
		'description' => 'Get AHAH closed ticket list.',
	  'page callback' => 'pos_api_expose_closed_invoices',
	  'access arguments' => array('access content'),
	  'type' => MENU_CALLBACK,
	  'file' => 'includes/tickets.route.inc'
	);

	$routers['pos-api/ticket/rma'] = array(
		'title' => 'RMA Process RPC Handler',
		'description' => 'Get confirmation when object is scanned.',
		'page callback' => 'pos_api_rma_process',
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK,
		'file' => 'includes/products.route.inc'
	);

  $routers['pos-api/ticket/product/manager-override'] = array(
    'title' => 'Manager Price Override',
    'description' => 'Manager price override rpc handler.',
    'page callback' => 'pos_api_expose_manager_override',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/tickets.route.inc'
  );

  $routers['pos-api/ticket/product/price-history'] = array(
    'title' => 'Product Price History',
    'description' => 'Return customer price history for product.',
    'page callback' => 'pos_api_expose_product_price_history',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/products.route.inc'
  );

  $routers['admin/invoice/print/%'] = array(
    'title' => 'Printable invoice',
    'page arguments' => array(3),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'page callback' => 'pos_ticket_invoice',
    'file' => 'includes/tickets.route.inc'
  );

  $routers['admin/invoice/print-reciept/%/%'] = array(
    'title' => 'Printable invoice',
    'page arguments' => array(3, 4),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'page callback' => 'pos_settlement_reciept',
    'file' => 'includes/tickets.route.inc'
  );

	return $routers;
}

function pos_api_expose_admin_payment_settings() {
  $form = array();

  $form['pos_api_expose_testing_enabled'] = array(
      '#type' => 'radios', 
      '#title' => t('Operation Mode'), 
      '#default_value' => variable_get('pos_api_expose_testing_enabled', 1), 
      '#options' => array(t('Live Mode'), t('Test Mode')),
  );
  
  $form['pos_api_expose_login_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Production API Login ID'),
    '#default_value' => variable_get('pos_api_expose_login_id', ''),
    '#description' => 'API login ID for your Authorize.net merchant account.',
    '#required' => TRUE
  );

  $form['pos_api_expose_transac_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Production Transaction Key'),
    '#default_value' => variable_get('pos_api_expose_transac_key', ''),
    '#description' => 'Transaction for your Authorize.net merchant account.',
    '#required' => TRUE
  );

  $form['pos_api_expose_login_id_test'] = array(
    '#type' => 'textfield',
    '#title' => t('Test API Login ID'),
    '#default_value' => variable_get('pos_api_expose_login_id_test', ''),
    '#description' => 'API login ID for your Authorize.net merchant account.',
    '#required' => FALSE
  );

  $form['pos_api_expose_transac_key_test'] = array(
    '#type' => 'textfield',
    '#title' => t('Test Transaction Key'),
    '#default_value' => variable_get('pos_api_expose_transac_key_test', ''),
    '#description' => 'Transaction for your Authorize.net merchant account.',
    '#required' => FALSE
  );

  return system_settings_form($form);
}

function pos_api_expose_respond($response, $die = FALSE) {
	drupal_set_header('Content-Type: application/json');
	print json_encode($response);

	if($die) {
		die();
	}
}

function pos_api_expose_theme() {
  return array(
    'settlement_reciept' => array(
      'template' => 'templates/settlement-reciept',
      'arguments' => array('payment' => null, 'breakdown' => null, 'customer' => null)
    )
  );
}

function _pos_api_expose_last_event($uid, $event_type) {
	return db_fetch_object(db_query("SELECT eid, checkin, checkout FROM {pos_api_expose_timesheet} WHERE uid = '%d' AND event_type = '%s' ORDER BY checkin DESC", $uid, $event_type));
}

function _pos_api_expose_uid_from_token($token) {
	return db_result(db_query("SELECT paet.uid FROM {pos_api_expose_tokens} paet WHERE paet.token = '%s'", $token));
}

function _pos_api_expose_log_ticket_load($uid, $ticketId) {
	$sql = "INSERT INTO {pos_api_expose_ticket_log} (uid, ticket_id, timestamp) VALUES ('%d', '%d', '%d')";
	db_query($sql, $uid, $ticketId, time());
}

function _pos_api_transaction_details($transaction_id) {
  module_load_include('php', 'pos_api_expose', 'includes/anet_php_sdk/AuthorizeNet');

  $test_mode = variable_get('pos_api_expose_testing_enabled', 1);
  if($test_mode) {
    $api_login = variable_get('pos_api_expose_login_id_test', '');
    $transac_key = variable_get('pos_api_expose_transac_key_test', '');
    define("AUTHORIZENET_SANDBOX", true);
  } else {
    $api_login = variable_get('pos_api_expose_login_id', '');
    $transac_key = variable_get('pos_api_expose_transac_key', '');
    define("AUTHORIZENET_SANDBOX", false);
  }

  if( !empty($transac_key) && !empty($api_login) ) {
    define("AUTHORIZENET_API_LOGIN_ID", $api_login);
    define("AUTHORIZENET_TRANSACTION_KEY", $transac_key);
    $request = new AuthorizeNetTD;
    $response = $request->getTransactionDetails($transaction_id);
    return $response;
  }

  return false;
}

function pos_api_log_ticket_event($order_id, $uid, $message) {
  $username = db_result(db_query("SELECT name FROM {users} WHERE uid = '%s'", $uid));
  uc_order_comment_save($order_id, $uid, $message.l($username, 'user/'.$uid));
}

function pos_api_expose_lock_ticket($ticket_id) {
  //Sometimes the client crashed before ticket can be closed, hence do it as as a precautionary measure.
  db_query("UPDATE {uc_orders} SET order_status = '%s' WHERE order_id = '%d'", 'pos_completed', $ticket_id);
}

function pos_api_expose_trim_hanging_balances($customer_uid = false) {
  //Forgive any hanging balances under less than half a penny.
  if($customer_uid) {
    $hanging_settles = db_query("SELECT cu.cuid FROM user_term_credits_usages cu
  INNER JOIN (SELECT cs.cuid, SUM(cs.settlement_amount) AS samount FROM user_term_credits_settlements cs GROUP BY cs.cuid) settlements
  ON cu.cuid = settlements.cuid WHERE cu.uid = '%d' AND cu.settled = '0' AND (ABS(cu.credit_amount-settlements.samount) < '0.005')", $customer_uid);
  } else {
    $hanging_settles = db_query("SELECT cu.cuid FROM user_term_credits_usages cu
  INNER JOIN (SELECT cs.cuid, SUM(cs.settlement_amount) AS samount FROM user_term_credits_settlements cs GROUP BY cs.cuid) settlements
  ON cu.cuid = settlements.cuid WHERE cu.settled = '0' AND (ABS(cu.credit_amount-settlements.samount) < '0.005')");
  }

  $cuids = array();
  while($cuid = db_result($hanging_settles)) {
    $cuids[] = $cuid;
  }

  if(count($cuids) > 0) {
    $cuid_set = implode(', ', $cuids);
    db_query("UPDATE user_term_credits_usages SET settled = '1' WHERE cuid IN (%s)", $cuid_set);
  }
}